version: 0.2

#env:
  #variables:
     # key: "There are no variables"
  #parameter-store:
     # key: "There are no variables"

phases:
  install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    runtime-versions:
       python: 3.7
    #commands:
      # - There are no build commands
  pre_build:
    commands:
      - pip install -r requirements.txt
#       - pip install -e .
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - IMAGE_NAME="imageapi"
      - REPOSITORY_URI=788989025800.dkr.ecr.ap-south-1.amazonaws.com/firstrepo
      - IMAGE_TAG=prod_$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - echo Image_tag $IMAGE_TAG
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG 
  post_build:
    commands:
#       - python setup.py sdist bdist_wheel
      - echo Build completed on `date`
      - echo Pushing the Docker images...
#       - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"imageapi-fargate-task","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
# artifacts:
artifacts:
    files: imagedefinitions.json
  #files:
    # - We don't currently preserve any artifacts
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - We don't currently cache anything
